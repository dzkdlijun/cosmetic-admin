<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <!-- 注解处理器映射器 -->
       <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
       </bean>

       <!-- 注解处理器适配器 -->
       <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>

       <!-- 试图解析器 -->

       <!-- 直接使用注解驱动，使用这种方式代替上面的配置方式，会默认加载很多的参数绑定方法，如json转换器，实际开发时可以使用这种方式 -->
       <!--<mvc:annotation-driven></mvc:annotation-driven>-->

       <!-- 无论使用哪种防止配置注解，都需要加载自己的handler，即controller，有两种方式，1单个配置，2直接扫描包 -->
       <!-- 方式1，单个配置 -->
       <!--<bean class="com.leeo.mybatis.controller.HomeController"/>-->

       <!-- 方式2，直接扫描包 -->
       <context:component-scan base-package="com.leeo.mybatis.controller"></context:component-scan>

</beans>